
package wscat;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSCat", targetNamespace = "http://wsCat/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSCat {


    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "remove", targetNamespace = "http://wsCat/", className = "wscat.Remove")
    @Action(input = "http://wsCat/WSCat/remove")
    public void remove(
        @WebParam(name = "entity", targetNamespace = "")
        Category entity);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://wsCat/", className = "wscat.Count")
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://wsCat/", className = "wscat.CountResponse")
    @Action(input = "http://wsCat/WSCat/countRequest", output = "http://wsCat/WSCat/countResponse")
    public int count();

    /**
     * 
     * @param id
     * @return
     *     returns wscat.Category
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "find", targetNamespace = "http://wsCat/", className = "wscat.Find")
    @ResponseWrapper(localName = "findResponse", targetNamespace = "http://wsCat/", className = "wscat.FindResponse")
    @Action(input = "http://wsCat/WSCat/findRequest", output = "http://wsCat/WSCat/findResponse")
    public Category find(
        @WebParam(name = "id", targetNamespace = "")
        Object id);

    /**
     * 
     * @param entity
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "create", targetNamespace = "http://wsCat/", className = "wscat.Create")
    @ResponseWrapper(localName = "createResponse", targetNamespace = "http://wsCat/", className = "wscat.CreateResponse")
    @Action(input = "http://wsCat/WSCat/createRequest", output = "http://wsCat/WSCat/createResponse")
    public int create(
        @WebParam(name = "entity", targetNamespace = "")
        Category entity);

    /**
     * 
     * @param nombre
     * @return
     *     returns java.util.List<wscat.Category>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByName", targetNamespace = "http://wsCat/", className = "wscat.FindByName")
    @ResponseWrapper(localName = "findByNameResponse", targetNamespace = "http://wsCat/", className = "wscat.FindByNameResponse")
    @Action(input = "http://wsCat/WSCat/findByNameRequest", output = "http://wsCat/WSCat/findByNameResponse")
    public List<Category> findByName(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre);

    /**
     * 
     * @return
     *     returns java.util.List<wscat.Category>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://wsCat/", className = "wscat.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://wsCat/", className = "wscat.FindAllResponse")
    @Action(input = "http://wsCat/WSCat/findAllRequest", output = "http://wsCat/WSCat/findAllResponse")
    public List<Category> findAll();

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "edit", targetNamespace = "http://wsCat/", className = "wscat.Edit")
    @Action(input = "http://wsCat/WSCat/edit")
    public void edit(
        @WebParam(name = "entity", targetNamespace = "")
        Category entity);

    /**
     * 
     * @param range
     * @return
     *     returns java.util.List<wscat.Category>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRange", targetNamespace = "http://wsCat/", className = "wscat.FindRange")
    @ResponseWrapper(localName = "findRangeResponse", targetNamespace = "http://wsCat/", className = "wscat.FindRangeResponse")
    @Action(input = "http://wsCat/WSCat/findRangeRequest", output = "http://wsCat/WSCat/findRangeResponse")
    public List<Category> findRange(
        @WebParam(name = "range", targetNamespace = "")
        List<Integer> range);

}
