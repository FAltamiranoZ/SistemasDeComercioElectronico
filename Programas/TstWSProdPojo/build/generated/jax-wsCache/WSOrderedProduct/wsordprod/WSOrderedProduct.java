
package wsordprod;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSOrderedProduct", targetNamespace = "http://wsOrdProd/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSOrderedProduct {


    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "remove", targetNamespace = "http://wsOrdProd/", className = "wsordprod.Remove")
    @Action(input = "http://wsOrdProd/WSOrderedProduct/remove")
    public void remove(
        @WebParam(name = "entity", targetNamespace = "")
        OrderedProduct entity);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://wsOrdProd/", className = "wsordprod.Count")
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://wsOrdProd/", className = "wsordprod.CountResponse")
    @Action(input = "http://wsOrdProd/WSOrderedProduct/countRequest", output = "http://wsOrdProd/WSOrderedProduct/countResponse")
    public int count();

    /**
     * 
     * @param id
     * @return
     *     returns wsordprod.OrderedProduct
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "find", targetNamespace = "http://wsOrdProd/", className = "wsordprod.Find")
    @ResponseWrapper(localName = "findResponse", targetNamespace = "http://wsOrdProd/", className = "wsordprod.FindResponse")
    @Action(input = "http://wsOrdProd/WSOrderedProduct/findRequest", output = "http://wsOrdProd/WSOrderedProduct/findResponse")
    public OrderedProduct find(
        @WebParam(name = "id", targetNamespace = "")
        Object id);

    /**
     * 
     * @param entity
     * @return
     *     returns wsordprod.OrderedProduct
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "create", targetNamespace = "http://wsOrdProd/", className = "wsordprod.Create")
    @ResponseWrapper(localName = "createResponse", targetNamespace = "http://wsOrdProd/", className = "wsordprod.CreateResponse")
    @Action(input = "http://wsOrdProd/WSOrderedProduct/createRequest", output = "http://wsOrdProd/WSOrderedProduct/createResponse")
    public OrderedProduct create(
        @WebParam(name = "entity", targetNamespace = "")
        OrderedProduct entity);

    /**
     * 
     * @return
     *     returns java.util.List<wsordprod.OrderedProduct>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://wsOrdProd/", className = "wsordprod.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://wsOrdProd/", className = "wsordprod.FindAllResponse")
    @Action(input = "http://wsOrdProd/WSOrderedProduct/findAllRequest", output = "http://wsOrdProd/WSOrderedProduct/findAllResponse")
    public List<OrderedProduct> findAll();

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "edit", targetNamespace = "http://wsOrdProd/", className = "wsordprod.Edit")
    @Action(input = "http://wsOrdProd/WSOrderedProduct/edit")
    public void edit(
        @WebParam(name = "entity", targetNamespace = "")
        OrderedProduct entity);

    /**
     * 
     * @param range
     * @return
     *     returns java.util.List<wsordprod.OrderedProduct>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRange", targetNamespace = "http://wsOrdProd/", className = "wsordprod.FindRange")
    @ResponseWrapper(localName = "findRangeResponse", targetNamespace = "http://wsOrdProd/", className = "wsordprod.FindRangeResponse")
    @Action(input = "http://wsOrdProd/WSOrderedProduct/findRangeRequest", output = "http://wsOrdProd/WSOrderedProduct/findRangeResponse")
    public List<OrderedProduct> findRange(
        @WebParam(name = "range", targetNamespace = "")
        List<Integer> range);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "encabezado", targetNamespace = "http://wsOrdProd/", className = "wsordprod.Encabezado")
    @ResponseWrapper(localName = "encabezadoResponse", targetNamespace = "http://wsOrdProd/", className = "wsordprod.EncabezadoResponse")
    @Action(input = "http://wsOrdProd/WSOrderedProduct/encabezadoRequest", output = "http://wsOrdProd/WSOrderedProduct/encabezadoResponse")
    public String encabezado();

}
